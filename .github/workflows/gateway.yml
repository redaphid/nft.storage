name: Gateway
on:
  push:
    branches:
      - main
    paths:
      - 'packages/gateway/**'
      - '.github/workflows/gateway.yml'
  pull_request:
    paths:
      - 'packages/gateway/**'
      - '.github/workflows/gateway.yml'
jobs:
  test:
    runs-on: ubuntu-latest
    name: Test
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
      - uses: bahmutov/npm-install@v1
      - run: npx playwright install-deps
      - run: yarn test:gateway
  deploy-staging:
    name: Deploy Staging
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
      - uses: bahmutov/npm-install@v1
      - name: Publish app
        uses: cloudflare/wrangler-action@1.3.0
        env:
          SENTRY_TOKEN: ${{secrets.SENTRY_TOKEN}}
        with:
          apiToken: ${{secrets.CF_API_TOKEN }}
          workingDirectory: 'packages/gateway'
          environment: 'staging'
  release:
    name: Release
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: GoogleCloudPlatform/release-please-action@v3
        id: tag-release
        with:
          path: packages/gateway
          token: ${{ secrets.GITHUB_TOKEN }}
          release-type: node
          monorepo-tags: true
          package-name: gateway
      - uses: actions/checkout@v2
        if: ${{ steps.tag-release.outputs.releases_created }}
      - uses: actions/setup-node@v2
        if: ${{ steps.tag-release.outputs.releases_created }}
        with:
          node-version: '16'
          registry-url: https://registry.npmjs.org/
      - uses: bahmutov/npm-install@v1
        if: ${{ steps.tag-release.outputs.releases_created }}
      - name: Deploy
        if: ${{ steps.tag-release.outputs.releases_created }}
        uses: cloudflare/wrangler-action@1.3.0
        env:
          SENTRY_TOKEN: ${{ secrets.SENTRY_TOKEN }}
          SENTRY_UPLOAD: ${{ secrets.SENTRY_UPLOAD }}
        with:
          apiToken: ${{ secrets.CF_API_TOKEN }}
          workingDirectory: 'packages/gateway'
          environment: 'production'
