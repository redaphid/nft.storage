on:
  push:
    branches:
      - main
name: Release
jobs:
  changeFinder:
    runs-on: ubuntu-latest
    outputs:
      nodePaths: ${{ steps.interrogate.outputs.nodePaths }}
    steps:
      - uses: actions/checkout@v2
      - id: interrogate
        uses: actions/github-script@v4
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const {execSync} = require('child_process');
            const [owner, repo] = process.env.GITHUB_REPOSITORY.split('/');
            const latestRelease = await github.repos.getLatestRelease({
              owner,
              repo
            });
            console.log(`latest release: ${JSON.stringify(latestRelease.data)}`);
            execSync('git pull --tags');
            execSync(`git reset --hard ${latestRelease.data.tag_name}`);
            const status = execSync(`git diff --name-only origin/main`, { encoding: 'utf-8'});
            console.log(status);
            const changes = status.split('\n');
            let nodePaths = new Set();
            for (const change of changes) {
              if (change.startsWith('packages/')) {
                  const library = change.split('/')[1];
                  nodePaths.add(library);
              };
            }
            nodePaths = Array.from(nodePaths);
            if(nodePaths.length === 0){
              console.log(`::warning::No changes found, release will be skipped.`)
            }
            console.log(`::set-output name=nodePaths::${JSON.stringify(nodePaths)}`);

  release-pr:
    runs-on: ubuntu-latest
    needs: changeFinder
    if: ${{ fromJson(needs.changeFinder.outputs.nodePaths)[0] != '' }}
    strategy:
      fail-fast: false
      matrix:
        package: ${{fromJson(needs.changeFinder.outputs.nodePaths)}}
    steps:
      - uses: google-github-actions/release-please-action@v2
        id: release-please
        with:
          path: packages/${{ matrix.package }}
          token: ${{ secrets.GITHUB_TOKEN }}
          release-type: node
          package-name: ${{ matrix.package }}
          monorepo-tags: true
          changelog-types: '[{"type":"feat","section":"Features","hidden":false},{"type":"fix","section":"Bug Fixes","hidden":false},{"type":"refactor","section":"Changes","hidden":false},{"type":"chore","section":"Changes","hidden":false}]'
          command: release-pr
  release:
    runs-on: ubuntu-latest
    needs: changeFinder
    if: ${{ fromJson(needs.changeFinder.outputs.nodePaths)[0] != '' }}
    strategy:
      fail-fast: false
      matrix:
        package: ${{fromJson(needs.changeFinder.outputs.nodePaths)}}
    steps:
      - uses: GoogleCloudPlatform/release-please-action@v2
        id: tag-release
        with:
          path: packages/${{ matrix.package }}
          token: ${{ secrets.GITHUB_TOKEN }}
          release-type: node
          package-name: ${{ matrix.package }}
          monorepo-tags: true
          changelog-types: '[{"type":"feat","section":"Features","hidden":false},{"type":"fix","section":"Bug Fixes","hidden":false},{"type":"refactor","section":"Changes","hidden":false},{"type":"chore","section":"Changes","hidden":false}]'
          command: github-release
      - uses: actions/checkout@v2
        if: ${{ steps.tag-release.outputs.release_created }}
      - uses: actions/setup-node@v2
        if: ${{ steps.tag-release.outputs.release_created }}
        with:
          node-version: '16'
          registry-url: https://registry.npmjs.org/
      - name: Install
        if: ${{ steps.tag-release.outputs.release_created }}
        uses: bahmutov/npm-install@v1
      - name: Client - NPM Publish
        if: ${{ steps.tag-release.outputs.release_created && matrix.package == 'client' }}
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_AUTH_TOKEN}}
        run: |
          cd packages/${{ matrix.package }}
          npm publish --access=public
      - name: Client - Generate documentation
        if: ${{ steps.tag-release.outputs.release_created && matrix.package == 'client' }}
        run: yarn build:client:docs
      - name: Client - Publish documentation
        if: ${{ steps.tag-release.outputs.release_created && matrix.package == 'client' }}
        uses: JamesIves/github-pages-deploy-action@4.1.7
        with:
          git-config-name: documentation-generator
          branch: gh-pages
          folder: docs/client
          target-folder: client
          commit-message: 'chore: generate client docs ${{ steps.tag-release.outputs.tag_name }} #${{ steps.tag-release.outputs.pr }}'
      - name: API - Deploy
        if: ${{ steps.tag-release.outputs.release_created && matrix.package == 'api' }}
        uses: cloudflare/wrangler-action@1.3.0
        env:
          SENTRY_TOKEN: ${{ secrets.SENTRY_TOKEN }}
          SENTRY_UPLOAD: ${{ secrets.SENTRY_UPLOAD }}
        with:
          apiToken: ${{ secrets.CF_API_TOKEN }}
          workingDirectory: 'packages/api'
          environment: 'production'
      - name: Gateway - Deploy
        if: ${{ steps.tag-release.outputs.release_created && matrix.package == 'gateway' }}
        uses: cloudflare/wrangler-action@1.3.0
        with:
          apiToken: ${{ secrets.CF_API_TOKEN }}
          workingDirectory: 'packages/gateway'
          environment: 'production'
      - name: Website - Deploy
        if: ${{ steps.tag-release.outputs.release_created && matrix.package == 'website' }}
        run: ./packages/tools/cli.js deploy-website --email ${{ secrets.CF_EMAIL }} --key ${{secrets.CF_KEY}} --zone ${{ secrets.CF_ZONE }} --account ${{secrets.CF_ACCOUNT}}
